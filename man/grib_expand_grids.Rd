% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/grib_expand_grids.R
\name{grib_expand_grids}
\alias{grib_expand_grids}
\title{Expand GRIB message value grids}
\usage{
grib_expand_grids(gribMessage, vector = FALSE)
}
\arguments{
\item{gribMessage}{\code{gribMessage} class object}

\item{vector}{optional \code{logical} inidicating whether or not to return as
a vector. Default \code{FALSE}.}
}
\value{
a \code{matrix} or vector of values from the GRIB message.
}
\description{
\code{grib_expand_grids} extracts the values from a GRIB message and expands
them into \code{matrix} form.
}
\details{
\code{grib_expand_grids} is another convenience function that will format the
values of the GRIB message into a \code{matrix}. In the case of a reduced
grid, an interpolation will be done to expand the values accordingly.

This function is influenced by the reduced to regular C interpolation routine
used in the pygrib Python module (see
\href{https://github.com/jswhit/pygrib/blob/master/pygrib.pyx}{pygrib
source}).
}
\examples{
# expand basic values grid to matrix
g <- grib_open(system.file("extdata", "lfpw.grib1", package = "gribr"))
gm <- grib_get_message(g, 1)
gm_ex <- grib_expand_grids(gm)
grib_close(g)

# expand a reduced grid (uses interpolation)
g_red <- grib_open(system.file("extdata", "reduced_latlon_surface.grib1", package = "gribr"))
gm <- grib_get_message(g_red, 1)
gm_red_ex <- grib_expand_grids(gm)
grib_close(g_red)
}
\seealso{
\code{\link{grib_latlons}}
}
